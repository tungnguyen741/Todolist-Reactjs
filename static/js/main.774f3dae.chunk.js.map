{"version":3,"sources":["Img/down-arrow.svg","Img/cross.svg","Img/tick.svg","Img/untick.svg","Img/test.svg","components/InputItem.js","components/TodoItem.js","components/ModalEdit.js","components/Counter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","InputItem","getValueInput","e","setState","value","target","state","vitri","inputValue","React","createRef","className","this","props","isShowCounter","onClick","setAllDone","src","down_arrow","alt","onKeyDown","key","addNewItem","name","isDone","current","ref","onChange","type","placeholder","Component","TodoItem","data","render","map","ModalEdit","showEdit","indexItem","changeNewItem","Counter","getAll","getActive","getDone","filter","item","length","btn_controll","App","dataStore","JSON","parse","localStorage","getItem","setItem","stringify","concat","removeItem","i","indexOf","dataIsRemoved","slice","dataStoreNew","editItem","newItem","handleIsDone","console","log","dataActive","dataDone","dataFalse","dataNew","logoTodo","tick","untick","cross","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.774f3dae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/down-arrow.3fc89807.svg\";","module.exports = __webpack_public_path__ + \"static/media/cross.441d8611.svg\";","module.exports = __webpack_public_path__ + \"static/media/tick.b649c651.svg\";","module.exports = __webpack_public_path__ + \"static/media/untick.40eb9cc6.svg\";","module.exports = __webpack_public_path__ + \"static/media/test.739cdfae.svg\";","import React, { Component } from 'react';\r\nimport './InputItem.css'\r\nimport down_arrow from '../Img/down-arrow.svg'\r\n\r\nexport default class InputItem extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            value: \"\",\r\n            vitri: 0\r\n        }\r\n        this.inputValue = React.createRef();\r\n    }\r\n    getValueInput = (e) => {\r\n        this.setState({value: e.target.value});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <div className=\"InputItem\">\r\n            {this.props.isShowCounter && <img onClick={this.props.setAllDone} className=\"down_arrow\" src={down_arrow} alt=\"down_arrow\"/>}\r\n            <input onKeyDown={(e) => {\r\n                if (e.key === 'Enter'){\r\n                    this.props.addNewItem({name: this.state.value, isDone: false});\r\n                    this.inputValue.current.value = \"\";\r\n                }\r\n             }}\r\n              ref={this.inputValue} \r\n              onChange={this.getValueInput}\r\n              type=\"text\"\r\n              placeholder=\"What needs to be done?\"\r\n            />\r\n        </div>\r\n        );\r\n    }  \r\n}\r\n\r\n ","import React, {Component} from 'react';\r\nimport './TodoItem.css'\r\nexport default class TodoItem extends Component{\r\n    render(){\r\n        const { data, render } = this.props;\r\n      return(\r\n        <div className=\"TodoItem\">\r\n          {data ? data.map(render) : ''}\r\n        </div>\r\n      );\r\n    }\r\n  }","import React, {Component} from 'react';\r\nexport default class ModalEdit extends Component {\r\n    constructor(){\r\n      super();\r\n      this.state={\r\n        value: \"\",\r\n        showEdit: false\r\n      }\r\n      this.inputValue = React.createRef();\r\n    }\r\n\r\n    getValueInput = (e) => {\r\n      this.setState({value: e.target.value})\r\n    }\r\n  \r\n    render(){\r\n      return(\r\n        <div className=\"ModalEdit\">\r\n            <div className=\"vitri\">\r\n            vi tri {this.props.indexItem}\r\n            </div>\r\n            <input ref={this.inputValue} onChange={this.getValueInput} type=\"text\"/>\r\n            <button onClick={()=>{\r\n              this.props.changeNewItem({name: this.state.value});\r\n              this.inputValue.current.value = \"\";\r\n            }}>submit</button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  ","import React, { Component } from 'react';\r\nimport './Counter.css'\r\nexport default class Counter extends Component {\r\n    \r\n    render(){\r\n        const {data, getAll, getActive, getDone}= this.props;\r\n            return(\r\n                <div className=\"Counter\">\r\n                    <div className=\"amount_item\">\r\n                        {/* { data.length !==0 ? data.length : \"\"  } item left */}\r\n                        {data.filter(item => item.isDone === false).length } item left\r\n                    </div>\r\n                    <div className=\"btn_controll\">\r\n                        <button className={this.props.btn_controll===1 ? \"btn btn_getAll active1\" : \"btn btn_getAll\"} onClick={getAll} >All</button>\r\n                        <button className={this.props.btn_controll===2 ? \"btn btn_getActive active2\" : \"btn btn_getActive\"} onClick={getActive} >Active</button>\r\n                        <button className={this.props.btn_controll===3 ? \"btn btn_getDone active3\" : \"btn btn_getDone\"} onClick={getDone} >Complete</button>\r\n                    </div>\r\n                   \r\n                </div>\r\n            );\r\n    }\r\n}","import React, { Component } from 'react';\nimport './App.css';\n\nimport InputItem from './components/InputItem';\nimport TodoItem from './components/TodoItem';\nimport ModalEdit from './components/ModalEdit'\nimport Counter from './components/Counter'\n\nimport cross from './Img/cross.svg'\nimport tick from './Img/tick.svg'\nimport untick from './Img/untick.svg'\nimport logoTodo from './Img/test.svg'\n\nclass App extends Component {\n  constructor(){\n    super();\n    let data = [];\n    data = JSON.parse( localStorage.getItem(\"data\") );\n    if(!data){\n      localStorage.setItem(\"data\",\"[]\");\n    }\n    this.state = {\n      data,\n      btn_controll: 1\n    }\n  }\n  \n  addNewItem = (item) => {\n    let dataStore = JSON.parse(localStorage.getItem(\"data\"));\n    if(this.state.data){\n      localStorage.setItem(\"data\", JSON.stringify(dataStore.concat(item)));\n      this.setState({data: this.state.data.concat(item) });\n    }else{\n      localStorage.setItem(\"data\", JSON.stringify([item]));\n      this.setState({data: [item]})\n    }\n  }\n    \n  removeItem = (item) => {\n    let dataStore = JSON.parse(localStorage.getItem(\"data\"));\n    const { data } = this.state;\n    let i = data.indexOf(item);\n    let dataIsRemoved = data.slice(0,i).concat(data.slice(i+1));\n    let dataStoreNew = dataStore.slice(0,i).concat(dataStore.slice(i+1));\n    localStorage.setItem(\"data\", JSON.stringify(dataStoreNew));\n    this.setState({data: dataIsRemoved });\n  }\n  \n  \n  \n  editItem = (item) => {\n    const { data } = this.state;\n    let i = data.indexOf(item);\n    this.setState({showEdit: !this.state.showEdit, vitri: i });\n  }\n  \n  changeNewItem = (newItem) => {\n    const { vitri } = this.state;\n    let dataStore = JSON.parse(localStorage.getItem(\"data\"));\n    let dataStoreNew = dataStore.slice(0, vitri).concat(newItem, dataStore.slice(vitri + 1));\n    localStorage.setItem(\"data\", JSON.stringify(dataStoreNew));\n    this.setState({\n       data: this.state.data.slice(0, vitri).concat(newItem, this.state.data.slice(vitri + 1))\n      })\n    } \n\n    handleIsDone=(item) => {\n      let dataStore = JSON.parse(localStorage.getItem(\"data\"));\n      let i = this.state.data.indexOf(item);\n      let dataStoreNew = dataStore.slice(0, i).concat({...item, isDone: !item.isDone}, dataStore.slice(i+1));\n      console.log(dataStoreNew);\n      localStorage.setItem(\"data\", JSON.stringify(dataStoreNew));\n      this.setState({data: this.state.data.slice(0, i).concat( {...item, isDone: !item.isDone}, this.state.data.slice(i+1))});\n    }\n    getAll = () => {\n      let dataStore = JSON.parse(localStorage.getItem(\"data\"));\n      this.setState({data: dataStore, btn_controll: 1});\n    }\n    getActive = () => {\n       let dataStore = JSON.parse(localStorage.getItem(\"data\"));\n       let dataActive = dataStore.filter(item => item.isDone === false);\n       if(dataActive.length){\n         this.setState({data: dataActive, btn_controll: 2});\n       }\n      }\n\n    getDone = () => {\n      let dataStore = JSON.parse(localStorage.getItem(\"data\"));\n      let dataDone = dataStore.filter(item => item.isDone === true);\n      if(dataDone.length){\n          this.setState({data: dataDone, btn_controll: 3});\n      };\n    }\n\n    setAllDone = () => {\n      let dataStore = JSON.parse(localStorage.getItem(\"data\"));\n      let dataFalse = dataStore.filter(item => !item.isDone  );\n      console.log(dataFalse);\n      let dataNew = dataStore.map(item => {\n          return ({...item, isDone: dataFalse.length ? true : false }); \n      })\n      localStorage.setItem(\"data\", JSON.stringify(dataNew));\n      this.setState({data: dataNew});\n    }\n    render(){\n      let isShowCounter = true;\n      if(this.state.data){\n        if( !this.state.data.length){\n          isShowCounter = false; \n        }\n      }\n\n      return (\n        <div className=\"App\">\n       <div className=\"title_logo\">\n          <h1>todos</h1>\n          <img className=\"logoTodo\" src={logoTodo} alt=\"logoTodo\"/>\n       </div>\n        <div className=\"wrapper_content\">\n          <InputItem isShowCounter={isShowCounter} setAllDone={this.setAllDone} addNewItem={this.addNewItem} ></InputItem>\n          <TodoItem data = {this.state.data} showEdit = {this.state.showEdit} render={ item => <div\n                 className={item.isDone ? \"Item isDone\" : \"Item\"}>\n                    <img  onClick={() => this.handleIsDone(item)}  className=\"tick\" src={item.isDone ? tick : untick} alt=\"tick\"/>\n                    <span className=\"item_content\">{item.name} </span>\n                    <button className=\"btn_remove\" onClick={() => this.removeItem(item)} > \n                      <img src={cross} alt=\"cross\"/>\n                    </button>\n                {/* <button className=\"btn_edit\" onClick={() => this.editItem(item)} > sua </button> */}\n              </div>\n            } \n          />\n         \n          {this.state.showEdit && <ModalEdit changeNewItem={this.changeNewItem} indexItem={this.state.vitri + 1} />}\n          \n          { isShowCounter && <Counter btn_controll={this.state.btn_controll} getAll={this.getAll} getActive={this.getActive} getDone={this.getDone} data={this.state.data} /> }\n         \n        </div>\n      </div>\n    );\n    \n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}